xlab='',main="Boston Housing: Selected Variables",
pscale=0, varname.cex=0.8,axis.text.cex=0.6,
axis.text.col="purple",axis.text.font=2,
axis.line.tck=.5,
panel=offDiag,
diag.panel = onDiag
)
us <- data.frame(pres, height, succ)
pres <- c("Obama", "Bush Jr","Clinton","Bush Sr")
height <- c(185,182,188, 188)
succ <- c(47.0,49.9, 55.1, 60.9)
us <- data.frame(pres, height, succ)
us
?lm
# x= height , y= succ .... y = mx + c
lmsucc <- lm(succ~height, data=us)
lmsucc
summary(lmsucc)
library(ggplot2)
plotsucc <- ggplot(us, aes(x=succ, y=height))
plotsucc
plotsucc <- ggplot(us, aes(x=succ, y=height)) + geom_point
plotsucc <- ggplot(us, aes(x=succ, y=height)) + geom_point
plotsucc
plotsucc <- ggplot(us, aes(x=succ, y=height)) + geom_point()
plotsucc
plotsucc <- ggplot(us, aes(x=height, y=succ)) + geom_point()
plotsucc
cor(height, succ)
plotsucc <- ggplot(us, aes(x=height, y=succ, cor.coef= TRUE)) + geom_point()
plotsucc
mean(height)
mean(succ)
sd(height)
sd(succ)
# x= 182, predict y
# y= -236.658 + 1.561*x
-236.658 + 1.561*182
# x=188
-236.658 + 1.561*188
#x=190(Pedict)
-236.658 + 1.561*190
#r^2= 0.53 ... error is 53% smaller than mean
182*0.53
install.packages('Sleuth3') # run only once to install package
# Note: you may need to update your R to the latest version in order for this package to be installed
library(Sleuth3)
?case1201; # help file to describe data
head(case1201); # look at the data
satdata <- case1201; # rename for ease of use
head(satdata)
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
satdata1 <- satdata[,c(2,1,3:8)]
head(satdata1)
offDiag <- function(x,y,...){
panel.grid(h=-1,v=-1,...)
panel.hexbinplot(x,y,xbins=15,...,border=gray(.7),
trans=function(x)x^.5)
#panel.loess(x , y, ..., lwd=2,col='red')
}
onDiag <- function(x, ...){
yrng <- current.panel.limits()$ylim
d <- density(x, na.rm=TRUE)
d$y <- with(d, yrng[1] + 0.95 * diff(yrng) * y / max(y) )
panel.lines(d,col=rgb(.83,.66,1),lwd=2)
diag.panel.splom(x, ...)
}
splom(satdata1,as.matrix=TRUE,
xlab='',main="SAT scores",
pscale=0, varname.cex=0.8,axis.text.cex=0.6,
axis.text.col="purple",axis.text.font=2,
axis.line.tck=.5,
panel=offDiag,
diag.panel = onDiag
)
satdata1 <- satdata[,c(2,1,3:8)]
head(satdata1)
offDiag <- function(x,y,...){
panel.grid(h=-1,v=-1,...)
panel.hexbinplot(x,y,xbins=15,...,border=gray(.7),
trans=function(x)x^.5)
#panel.loess(x , y, ..., lwd=2,col='red')
}
onDiag <- function(x, ...){
yrng <- current.panel.limits()$ylim
d <- density(x, na.rm=TRUE)
d$y <- with(d, yrng[1] + 0.95 * diff(yrng) * y / max(y) )
panel.lines(d,col=rgb(.83,.66,1),lwd=2)
diag.panel.splom(x, ...)
}
splom(satdata1,as.matrix=TRUE,
xlab='',main="SAT scores",
pscale=0, varname.cex=0.8,axis.text.cex=0.6,
axis.text.col="purple",axis.text.font=2,
axis.line.tck=.5,
panel=offDiag,
diag.panel = onDiag
)
splom(satdata1,as.matrix=TRUE,
xlab='',main="SAT scores",
pscale=0, varname.cex=0.8,axis.text.cex=0.6,
axis.text.col="purple",axis.text.font=2,
axis.line.tck=.5,
panel=offDiag,
diag.panel = onDiag
)
?lattice
library(lattice)
splom(satdata1,as.matrix=TRUE,
xlab='',main="SAT scores",
pscale=0, varname.cex=0.8,axis.text.cex=0.6,
axis.text.col="purple",axis.text.font=2,
axis.line.tck=.5,
panel=offDiag,
diag.panel = onDiag
)
sat <- gather(satdata, key = "Ind", value ="State")
sat
# write your code in this section below this line
summary(lm.all)
plot(lm.all)
satplot
satplot <- plot(lm.all)
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
# write your code in this section below this line
summary(lm.all)
all:
lm(formula = SAT ~ Takers + Income + Years + Public + Expend +
Rank, data = satdata)
satplot <- plot(lm.all)
d
d <- data("anscombe")
d
satplot
satplot <- plot(lm.all)
nstall.packages('Sleuth3') # run only once to install package
# Note: you may need to update your R to the latest version in order for this package to be installed
library(Sleuth3)
library(lattice)
?case1201; # help file to describe data
head(case1201); # look at the data
satdata <- case1201; # rename for ease of use
head(satdata)
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
sat <- gather(satdata, key = "Ind", value ="State")
sat
summary(lm.all)
all:
lm(formula = SAT ~ Takers + Income + Years + Public + Expend +
Rank, data = satdata)
satplot <- plot(lm.all)
mpg
library(GGally)
?ggally
install.packages(GGally)
library(GGally)
install.packages(GGally)
library(ggplot2)
library(GGally)
library('GGally')
# write your code in this section below this line
library(MASS)
lm.bw
lm.bw <- stepAIC(lm.all, direction = "backward", trace=FALSE)
lm.bw
plot(lm.bw)
sat <- gather(satdata, key = "Ind", value ="State")
sat
sat.1 <- lm(SAT~ 1, data=satdata)
sat.1
sat.11 <- lm(SAT ~Takers, data = satdata)
sat.11
sat.11 <- lm(SAT ~Takers, data = satdata)
sat.12 <- lm(SAT ~Income, data = satdata)
sat.13 <- lm(SAT ~Years, data = satdata)
sat.14 <- lm(SAT ~Public, data = satdata)
sat.15 <- lm(SAT ~Expend, data = satdata)
sat.16 <- lm(SAT ~Rank, data = satdata)
step(sat.1, direction = "backward")
# write your code in this section below this line
summary(lm.all)
satplot <- plot(lm.all)
lm.exp
lm.exp <- lm(SAT~ ., data=satdata)
lm.exp
install.packages('Sleuth3') # run only once to install package
# Note: you may need to update your R to the latest version in order for this package to be installed
library(Sleuth3)
library(lattice)
?case1201; # help file to describe data
head(case1201); # look at the data
satdata <- case1201; # rename for ease of use
head(satdata)
#################################################################################
# 1) Fit a multiple linear regression model with SAT as the response variable and
#    Takers, Income, Years, Public, Expend, and Rank as independent variables.
#    Store this linear regression model in an R object called 'lm.all'.
#################################################################################
# write your code in this section below this line
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
#####tibble(satdata)
sat <- gather(satdata, key = "Ind", value ="State")
sat
#################################################################################
# 2) Produce a model fit summary AND diagnostic plots associated with lm.all
#################################################################################
# write your code in this section below this line
summary(lm.all)
# copy the summary output and plots into a separate document
#Call:
lm(formula = SAT ~ Takers + Income + Years + Public + Expend +
Rank, data = satdata)
Residuals:
Min      1Q  Median      3Q     Max
-60.046  -6.768   0.972  13.947  46.332
Coefficients:
Estimate Std. Error t value Pr(>|t|)
(Intercept) -94.659109 211.509584  -0.448 0.656731
Takers       -0.480080   0.693711  -0.692 0.492628
Income       -0.008195   0.152358  -0.054 0.957353
Years        22.610082   6.314577   3.581 0.000866 ***
Public       -0.464152   0.579104  -0.802 0.427249
Expend        2.212005   0.845972   2.615 0.012263 *
#  Rank          8.476217   2.107807   4.021 0.000230
satplot <- plot(lm.all)
#     a) What should we expect to see in the plot if the linear model assumptions are NOT violated?
#     b) Describe what characteristics we actually see in the plot for the given linear model and data.
#     c) Based on your responses to parts (a) and (c), do the model assumptions appear to be violated? Be specific
#        about which assumptions we can assess for each specific plot.
#################################################################################
# write your responses in the separate document containing the model summary and plots
##############################################################################################
# 4) Do you see any serious problems in any of the diagnostic plots?
#    If so, how will you modify your data to address the problem?
#    Important: Focus on one serious problem, rather than addressing every minor issue in the diagnostic plots.
##############################################################################################
# write your responses in the separate document containing the model summary and plots
#############################################################################################
# 5) Perform backward model selection until all variables left in your model are significant.
#    You can do this using an automated function in R or manually by repeatedly fitting models
#    and dropping variables one at a time.
#    Important: Be sure to include any modifications to the data from the previous question when fitting the model
#############################################################################################
# write your code below this line to produce a summary of the model with all variables
# write your code below this line all code created to perform backward selection
# write your code below this line to save the final model in an R object called 'lm.bw'
#################################################################################
# 6) Produce a model fit summary AND diagnostic plots associated with lm.bw
#################################################################################
# write your code in this section below this line
#library(MASS)
#lm.bw <- stepAIC(lm.all, direction = "backward", trace=FALSE)
#lm.bw
#plot(lm.bw)
sat.1 <- lm(SAT~ 1, data=satdata)
sat.1 #null set
sat.11 <- lm(SAT ~Takers, data = satdata)
sat.12 <- lm(SAT ~Income, data = satdata)
sat.13 <- lm(SAT ~Years, data = satdata)
sat.14 <- lm(SAT ~Public, data = satdata)
sat.15 <- lm(SAT ~Expend, data = satdata)
sat.16 <- lm(SAT ~Rank, data = satdata)
step(sat.1, direction = "backward")
##Takers+Income+Years+Public+Expend+Rank, data=satdata)
# copy the summary output and plots into a separate document
#################################################################################
# 7) Compare the diagnostic plots for lm.all and lm.bw.  Which model and data appear
#    to satisfy the linear model assumptions? Describe the characteristics of the diagnostic
#    plots for lm.all and lm.bw and how they support your claims.
#################################################################################
# write your responses in the separate document containing the model summary and plots
head(case1201); # look at the data
satdata <- case1201; # rename for ease of use
head(satdata)
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
sat <- gather(satdata, key = "Ind", value ="State")
sat
# write your code in this section below this line
summary(lm.all)
lm(formula = SAT ~ Takers + Income + Years + Public + Expend +
Rank, data = satdata)
satplot <- plot(lm.all)
sat.1 <- lm(SAT~ 1, data=satdata)
sat.1 #null set
sat.11 <- lm(SAT ~Takers, data = satdata)
sat.12 <- lm(SAT ~Income, data = satdata)
sat.13 <- lm(SAT ~Years, data = satdata)
sat.14 <- lm(SAT ~Public, data = satdata)
sat.15 <- lm(SAT ~Expend, data = satdata)
sat.16 <- lm(SAT ~Rank, data = satdata)
step(sat.1, direction = "backward")
library(MASS)
lm.bw <- stepAIC(lm.all, direction = "backward", trace=FALSE)
lm.bw
plot(lm.bw)
satplot
sat <- gather(satdata, key = "Ind", value ="State")
sat
lm(formula = SAT ~ Takers + Income + Years + Public + Expend +
Rank, data = satdata)
# write your code in this section below this line
summary(lm.all)
par(mfrow=c(2,2))
satplot <- plot(lm.all)
library(MASS)
lm.bw <- stepAIC(lm.all, direction = "backward", trace=FALSE)
lm.bw
plot(lm.bw)
plot(lm.bw)
library(MASS)
lm.bw <- stepAIC(lm.all, direction = "backward", trace=FALSE)
lm.bw
plot(lm.bw)
names(Default)
gll <- glm(default ~ balance, data = Default, family = binomial)
sumary(gll)
gll
library(Sleuth3)
library(lattice)
?case1201; # help file to describe data
head(case1201); # look at the data
satdata <- case1201; # rename for ease of use
head(satdata)
?lattice
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
library(tidyverse)
residFit
(lm.all,
title2="Using residFit()"
)
?residfit
?residFit
library(ggplot2)
residplot(lm.all,
title2="Using residFit()")
FSA::residPlot(lm.all)
lm.fit <- ggplot(data=lm.all,mapping=aes(x=fitted ,y=residuals)) +
geom_point() +
geom_hline(yintercept=0,linetype="dashed") +
geom_smooth()
lm.all
FSA::residPlot(lm.all)
library(FSA)
2^2
2**2
2**3
4**3
?I
sqrt(4)
---
title: "STAT515_Homework_3_Deepti_V_Khandagale"
author: "Deepti Vijay Khandagale"
date: "4/10/2022"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
?case1201
head(case1201)
satdata <- case1201
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
install.packages('Sleuth3')
library(Sleuth3)
library(lattice)
library(tidyverse)
?case1201
head(case1201)
satdata <- case1201
install.packages("Sleuth3")
`{r setup, include=FALSE}
install.packages('Sleuth3')
library(Sleuth3)
library(lattice)
library(tidyverse)
?case1201
head(case1201)
satdata <- case1201
install.packages('Sleuth3')
library(tidyverse)
```{r setup, include=FALSE}
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
library(tidyverse)
?case1201
head(case1201)
install.packages('Sleuth3')
library(Sleuth3)
library(lattice)
library(tidyverse)
?case1201
head(case1201)
satdata <- case1201
knitr::opts_chunk$set(echo = FALSE)
install.packages('Sleuth3')
library(Sleuth3)
library(lattice)
library(tidyverse)
?case1201
head(case1201)
satdata <- case1201
lm.all <- lm(SAT~ Takers+Income+Years+Public+Expend+Rank, data=satdata)
lm.all
install.packages("Sleuth3")
knitr::opts_chunk$set(echo = FALSE)
?case1201
head(case1201)
head(satdata)
lm.all
summary(lm.all)
par(mfrow=c(2,2))
satplot <- plot(lm.all)
satplot
summary(lm.all)
library(GGally)
ggscatmat(satdata)
ggscatmat(satdata)
library(GGally)
ggscatmat(satdata)
library(GGally)
ggscatmat(satdata)
lm.fit <- lm(SAT~ log(Takers)+ Income + Years + Public + Expend +
Rank, data = satdata)
summary(lm.fit)
# write your code below this line all code created to perform backward selection
step(lm.fit, direction = "backward")
# write your code below this line to save the final model in an R object called 'lm.bw'
lm.bw <- update(lm.fit, .~. - Public - Income)
# write your code in this section below this line
summary(lm.bw)
plot(lm.bw)
plot(lm.bw)
summary(lm.bw)
par(mfrow=c(2,2))
plot(lm.bw)
plot(lm.all)
plot(lm.bw)
lm.1 <- lm(SAT~Takers, data=satdata)
lm.1 <- lm(SAT~Takers, data=satdata)
lm.2 <- lm(SAT~Years, data=satdata)
lm.3 <- lm(SAT~Income, data=satdata)
lm.4 <- lm(SAT~Public, data=satdata)
lm.5 <- lm(SAT~Expend, data=satdata)
lm.6 <- lm(SAT~Rank, data=satdata)
plot(lm.1)
par(mfrow=c(2,2))
plot(lm.1)
plot(lm.bw)
plot(lm.bw)
par(mfrow=c(2,2))
plot(lm.bw)
par(mfrow=c(2,2))
plot(lm.bw)
par(mfrow=c(2,2))
plot(lm.all)
par(mfrow=c(2,2))
plot(lm.bw)
par(mfrow=c(2,2))
plot(lm.all)
satplot <- plot(lm.all)
par(mfrow=c(2,2))
satplot <- plot(lm.all)
getwd()
library(ggplot2)
data <- read.csv('EmployeeAttrition.csv')
head(data)
#Q.1: Create Histogram for Age using R
hist(data$Age, main = "Histogram of Employee Age", xlab = "Age", col="cadetblue"
, border = "black")
#Q.3: Create Scatter Plot for Age and Monthly Income using R
ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point()
setwd("~/Documents/DiptiFolder/GMU_Spring_2022/Deepti_Github_Repo/Khandagale_AIT580/Assignment_10")
getwd()
data <- read.csv('EmployeeAttrition.csv')
head(data)
#Q.1: Create Histogram for Age using R
hist(data$Age, main = "Histogram of Employee Age", xlab = "Age", col="cadetblue"
, border = "black")
#Q.3: Create Scatter Plot for Age and Monthly Income using R
ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point()
hist(data$Age, main = "Histogram of Employee Age", xlab = "Age", col="cadetblue"
, border = "black")
head(data)
print(ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point())
?ggsave()
Age <-print(hist(data$Age, main = "Histogram of Employee Age", xlab = "Age", col="cadetblue"
, border = "black"))
ggsave("Age.png")
Scatterplot <- print(ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point())
Histogram <-print(hist(data$Age, main = "Histogram of Employee Age", xlab = "Age", col="cadetblue"
, border = "black"))
ggsave("Age.png")
ggsave("Sactterplot.png")
Scatterplot <- print(ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point())
ggsave("Sactterplot.png")
Scatterplot <- print(ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point())
setwd("~/Documents/DiptiFolder/GMU_Spring_2022/Deepti_Github_Repo/Khandagale_AIT580/Assignment_11")
ggsave("Histogram.png")
ggsave("Sactterplot.png")
electricity <- read.csv(url="https://www.nytimes.com/interactive/2018/12/24/climate/how-electricity-generation-changed-in-your-state.html")
electricity <- read_html(x = "https://www.nytimes.com/interactive/2018/12/24/climate/how-electricity-generation-changed-in-your-state.html")
Histogram <-print(hist(data$Age, main = "Histogram of Employee Age", xlab = "Age", col="cadetblue"
, border = "black"))
Scatterplot <- print(ggplot(data = data, aes(x=Age, y=MonthlyIncome)) + geom_point())
